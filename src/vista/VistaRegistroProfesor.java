/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;



import conexion.Conexion;
import controlador.ControladorProfesor;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Profesor;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;


/**
 *
 * @author Itzel_CG
 */
public class VistaRegistroProfesor extends javax.swing.JFrame {
    
 //private ModeloTablaProfesor modeloTabla;
    
    private Profesor profesorSeleccionado;
    
    public VistaRegistroProfesor() {
        initComponents();
         this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setTitle("Registro Profesor- SISTEMA DE LA INSTITUCIÓN");
        this.setSize(new Dimension (900, 550));
         cargarDatos();
        
         
        etiNombre3.setVisible(false);
        etiNombre5.setVisible(false);
        etiNombre6.setVisible(false);
        etiNombre9.setVisible(false);
        etiNombre8.setVisible(false);
        etiNombre2.setVisible(false);
          //etiNombre7.setVisible(false);
        



            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrupo = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        etiNombre4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        btnVentanaAnterior = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        etiNombre2 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtApellidoP = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtNumeroTelefono = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtApellidoM = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        msg5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaProfesor = new javax.swing.JTable();
        btnEliminar = new javax.swing.JLabel();
        txtCedula = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JLabel();
        btnActualizar = new javax.swing.JLabel();
        txtDomicilio = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtEspecialidad = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        IdUsuario = new javax.swing.JTextField();
        etiNombre3 = new javax.swing.JLabel();
        etiNombre5 = new javax.swing.JLabel();
        etiNombre6 = new javax.swing.JLabel();
        etiNombre8 = new javax.swing.JLabel();
        etiNombre9 = new javax.swing.JLabel();
        btnModificar = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        etiNombre4.setForeground(new java.awt.Color(255, 0, 0));
        etiNombre4.setText("Solo letras");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(1, 25, 71));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(1, 25, 71));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Profesor");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, 30));

        jPanel2.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 30));

        jPanel3.setBackground(new java.awt.Color(0, 51, 153));
        jPanel3.setPreferredSize(new java.awt.Dimension(350, 600));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel3.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 148, -1, 223));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/i6.1.png"))); // NOI18N
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 250, -1));

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Ebrima", 1, 32)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("EscuelaConnect ");
        jPanel3.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, -1, -1));

        btnVentanaAnterior.setFont(new java.awt.Font("Ebrima", 1, 13)); // NOI18N
        btnVentanaAnterior.setForeground(new java.awt.Color(255, 255, 255));
        btnVentanaAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/anterior.png"))); // NOI18N
        btnVentanaAnterior.setText("Ventana anterior");
        btnVentanaAnterior.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnVentanaAnteriorMouseClicked(evt);
            }
        });
        jPanel3.add(btnVentanaAnterior, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 250, 470));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        etiNombre2.setForeground(new java.awt.Color(255, 0, 0));
        etiNombre2.setText("Solo Números");
        jPanel4.add(etiNombre2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 240, -1, 20));

        jLabel13.setBackground(new java.awt.Color(0, 51, 102));
        jLabel13.setFont(new java.awt.Font("Ebrima", 1, 26)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 51, 102));
        jLabel13.setText("Registro profesor");
        jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, 40));

        txtNombre.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        txtNombre.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombreFocusLost(evt);
            }
        });
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });
        jPanel4.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 150, 20));

        txtApellidoP.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        txtApellidoP.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtApellidoP.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtApellidoPFocusLost(evt);
            }
        });
        txtApellidoP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidoPActionPerformed(evt);
            }
        });
        txtApellidoP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidoPKeyTyped(evt);
            }
        });
        jPanel4.add(txtApellidoP, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, 160, 20));

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel5.setText("Apellido Paterno");
        jPanel4.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, 110, -1));

        txtNumeroTelefono.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        txtNumeroTelefono.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtNumeroTelefono.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNumeroTelefonoFocusLost(evt);
            }
        });
        txtNumeroTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroTelefonoActionPerformed(evt);
            }
        });
        txtNumeroTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroTelefonoKeyTyped(evt);
            }
        });
        jPanel4.add(txtNumeroTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 170, -1));

        jLabel8.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel8.setText("Número de teléfono");
        jPanel4.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 120, 26));

        txtApellidoM.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        txtApellidoM.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtApellidoM.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtApellidoMFocusLost(evt);
            }
        });
        txtApellidoM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidoMActionPerformed(evt);
            }
        });
        txtApellidoM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidoMKeyTyped(evt);
            }
        });
        jPanel4.add(txtApellidoM, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 100, 170, 20));

        jLabel9.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel9.setText("Apellido Materno");
        jPanel4.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 70, 110, 20));

        msg5.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        msg5.setForeground(new java.awt.Color(255, 0, 0));
        msg5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jPanel4.add(msg5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 270, -1, -1));

        jLabel10.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel10.setText("Nombre");
        jPanel4.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 73, 20));

        tablaProfesor.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        tablaProfesor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaProfesor.setToolTipText("");
        tablaProfesor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaProfesorMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaProfesor);

        jPanel4.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 500, 100));

        btnEliminar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/btnEli2.png"))); // NOI18N
        btnEliminar.setText("Eliminar  ");
        btnEliminar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarMouseClicked(evt);
            }
        });
        jPanel4.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 420, -1, 40));

        txtCedula.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        txtCedula.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCedulaActionPerformed(evt);
            }
        });
        txtCedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCedulaKeyTyped(evt);
            }
        });
        jPanel4.add(txtCedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 220, 150, -1));

        jLabel17.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel17.setText("Cédula");
        jPanel4.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 190, 120, 26));

        btnGuardar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/btnGuardar8.png"))); // NOI18N
        btnGuardar.setText("Guardar   ");
        btnGuardar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnGuardarMouseClicked(evt);
            }
        });
        jPanel4.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 420, -1, 40));

        btnActualizar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/actualizar (1).png"))); // NOI18N
        btnActualizar.setText("Actualizar  ");
        btnActualizar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnActualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnActualizarMouseClicked(evt);
            }
        });
        jPanel4.add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 420, -1, 40));

        txtDomicilio.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        txtDomicilio.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtDomicilio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDomicilioFocusLost(evt);
            }
        });
        txtDomicilio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDomicilioActionPerformed(evt);
            }
        });
        txtDomicilio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDomicilioKeyTyped(evt);
            }
        });
        jPanel4.add(txtDomicilio, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 500, 20));

        jLabel11.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel11.setText("Domicilio");
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 110, 20));

        jLabel18.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel18.setText("Especialidad");
        jPanel4.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 190, 120, 26));

        txtEspecialidad.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        txtEspecialidad.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtEspecialidad.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEspecialidadFocusLost(evt);
            }
        });
        txtEspecialidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEspecialidadActionPerformed(evt);
            }
        });
        txtEspecialidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEspecialidadKeyTyped(evt);
            }
        });
        jPanel4.add(txtEspecialidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 220, 150, -1));

        jLabel2.setText("IdUsuario");
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 250, -1, -1));

        IdUsuario.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        IdUsuario.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        IdUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IdUsuarioActionPerformed(evt);
            }
        });
        IdUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                IdUsuarioKeyTyped(evt);
            }
        });
        jPanel4.add(IdUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 260, 150, -1));

        etiNombre3.setForeground(new java.awt.Color(255, 0, 0));
        etiNombre3.setText("Solo letras");
        jPanel4.add(etiNombre3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, 60, 30));

        etiNombre5.setForeground(new java.awt.Color(255, 0, 0));
        etiNombre5.setText("Solo letras");
        jPanel4.add(etiNombre5, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 110, 60, 30));

        etiNombre6.setForeground(new java.awt.Color(255, 0, 0));
        etiNombre6.setText("Solo letras");
        jPanel4.add(etiNombre6, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 110, 60, 30));

        etiNombre8.setForeground(new java.awt.Color(255, 0, 0));
        etiNombre8.setText("Solo letras");
        jPanel4.add(etiNombre8, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 240, 60, 30));

        etiNombre9.setForeground(new java.awt.Color(255, 0, 0));
        etiNombre9.setText("Solo Números");
        jPanel4.add(etiNombre9, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 240, -1, 20));

        btnModificar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/btnEd.png"))); // NOI18N
        btnModificar.setText("Modificar  ");
        btnModificar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnModificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnModificarMouseClicked(evt);
            }
        });
        jPanel4.add(btnModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 420, -1, 40));

        jPanel2.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, 530, 470));

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Vector.png"))); // NOI18N
        jPanel2.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 0, 180, 630));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 520));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
                char c = evt.getKeyChar();
                if (!Character.isLetter(c) && !Character.isWhitespace(c)) {
                    evt.consume(); 
                    
                }
                
                txtNombre.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtNombreKeyTyped

    private void txtApellidoPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidoPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoPActionPerformed

    private void txtApellidoPKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoPKeyTyped
  char c = evt.getKeyChar();
                if (!Character.isLetter(c) && !Character.isWhitespace(c)) {
                    evt.consume(); 
                  
                }
                
                txtApellidoP.setBackground(Color.WHITE);        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoPKeyTyped

    private void txtApellidoMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidoMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoMActionPerformed

    private void txtApellidoMKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoMKeyTyped
  char c = evt.getKeyChar();
                if (!Character.isLetter(c) && !Character.isWhitespace(c)) {
                    evt.consume(); 
                    
                }
                
                txtApellidoM.setBackground(Color.WHITE);        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoMKeyTyped

    private void txtNumeroTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroTelefonoKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume(); 
           
        }

    }//GEN-LAST:event_txtNumeroTelefonoKeyTyped

    private void txtNumeroTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroTelefonoActionPerformed

    private void btnVentanaAnteriorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVentanaAnteriorMouseClicked
        VistaPrincipalP ventanaPrincipal = new VistaPrincipalP();
        ventanaPrincipal.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_btnVentanaAnteriorMouseClicked

    private void txtCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCedulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCedulaActionPerformed

    private void txtCedulaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume(); 
            etiNombre2.setVisible(true);
        }
    }//GEN-LAST:event_txtCedulaKeyTyped

    private void btnEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseClicked
     eliminarProfesor();
        
    }//GEN-LAST:event_btnEliminarMouseClicked

    private void btnGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseClicked
  
        if (txtDomicilio.getText().isEmpty()||txtApellidoM.getText().isEmpty()||txtNombre.getText().isEmpty()||txtApellidoP.getText().isEmpty()||txtNombre.getText().isEmpty()|| txtApellidoP.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "Faltan datos.");
        }else guardarProfesor();
    }//GEN-LAST:event_btnGuardarMouseClicked

    private void btnActualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnActualizarMouseClicked
     
 cargarDatosss();
    }//GEN-LAST:event_btnActualizarMouseClicked

    private void txtDomicilioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDomicilioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDomicilioActionPerformed

    private void txtDomicilioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDomicilioKeyTyped
   
    }//GEN-LAST:event_txtDomicilioKeyTyped

    private void txtEspecialidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEspecialidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEspecialidadActionPerformed

    private void txtEspecialidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEspecialidadKeyTyped
        // TODO add your handling code here:
          char c = evt.getKeyChar();
                if (!Character.isLetter(c) && !Character.isWhitespace(c)) {
                    evt.consume(); 
                    
                }
                
                txtEspecialidad.setBackground(Color.WHITE);   
    }//GEN-LAST:event_txtEspecialidadKeyTyped

    private void tablaProfesorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaProfesorMouseClicked



  cargarDatosEnCampos(tablaProfesor.getSelectedRow());













        
    }//GEN-LAST:event_tablaProfesorMouseClicked

    private void IdUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IdUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IdUsuarioActionPerformed

    private void IdUsuarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_IdUsuarioKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_IdUsuarioKeyTyped

    private void btnModificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarMouseClicked
        try {
            modificarProfesor();
        } catch (SQLException ex) {
            Logger.getLogger(VistaRegistroProfesor.class.getName()).log(Level.SEVERE, null, ex);
        }

        
        
    }//GEN-LAST:event_btnModificarMouseClicked

    private void txtNombreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreFocusLost
        // TODO add your handling code here:
        if(txtNombre.getText().trim().isEmpty()){
            etiNombre3.setVisible(true);
        }else{
            etiNombre3.setVisible(false);
        }
    }//GEN-LAST:event_txtNombreFocusLost

    private void txtApellidoPFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtApellidoPFocusLost
        // TODO add your handling code here:
        if(txtApellidoP.getText().trim().isEmpty()){
            etiNombre5.setVisible(true);
        }else{
            etiNombre5.setVisible(false);
        }
    }//GEN-LAST:event_txtApellidoPFocusLost

    private void txtApellidoMFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtApellidoMFocusLost
        // TODO add your handling code here:
        if(txtApellidoM.getText().trim().isEmpty()){
            etiNombre6.setVisible(true);
        }else{
            etiNombre6.setVisible(false);
        }
    }//GEN-LAST:event_txtApellidoMFocusLost

    private void txtDomicilioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDomicilioFocusLost
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtDomicilioFocusLost

    private void txtNumeroTelefonoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNumeroTelefonoFocusLost
        // TODO add your handling code here:
         if(txtNumeroTelefono.getText().trim().isEmpty()){
            etiNombre9.setVisible(true);
        }else{
            etiNombre9.setVisible(false);
        }
    }//GEN-LAST:event_txtNumeroTelefonoFocusLost

    private void txtEspecialidadFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEspecialidadFocusLost
        // TODO add your handling code here:
        if(txtEspecialidad.getText().trim().isEmpty()){
             etiNombre8.setVisible(true);
        }else{
            etiNombre8.setVisible(true);
        }
       
    }//GEN-LAST:event_txtEspecialidadFocusLost

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaRegistroProfesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaRegistroProfesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaRegistroProfesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaRegistroProfesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaRegistroProfesor().setVisible(true);
            }
        });
    }
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField IdUsuario;
    private javax.swing.JLabel btnActualizar;
    private javax.swing.JLabel btnEliminar;
    private javax.swing.ButtonGroup btnGrupo;
    private javax.swing.JLabel btnGuardar;
    private javax.swing.JLabel btnModificar;
    private javax.swing.JLabel btnVentanaAnterior;
    private javax.swing.JLabel etiNombre2;
    private javax.swing.JLabel etiNombre3;
    private javax.swing.JLabel etiNombre4;
    private javax.swing.JLabel etiNombre5;
    private javax.swing.JLabel etiNombre6;
    private javax.swing.JLabel etiNombre8;
    private javax.swing.JLabel etiNombre9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel msg5;
    private javax.swing.JTable tablaProfesor;
    private javax.swing.JTextField txtApellidoM;
    private javax.swing.JTextField txtApellidoP;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtDomicilio;
    private javax.swing.JTextField txtEspecialidad;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNumeroTelefono;
    // End of variables declaration//GEN-END:variables



private void Limpiar() {
        
        txtNombre.setText("");
        txtApellidoP.setText("");
        txtApellidoM.setText("");
        txtDomicilio.setText("");
        txtNumeroTelefono.setText("");
        txtCedula.setText("");
        txtEspecialidad.setText("");
        etiNombre3.setVisible(false);
        etiNombre5.setVisible(false);
        etiNombre6.setVisible(false);
        etiNombre9.setVisible(false);
        etiNombre8.setVisible(false);
        etiNombre2.setVisible(false);
    }



private void guardarProfesor() {
      
        String nombre = txtNombre.getText();
        String apellidoP = txtApellidoP.getText();
        String apellidoM = txtApellidoM.getText();
        String direccion = txtDomicilio.getText();
        String telefono = txtNumeroTelefono.getText();
        String especialidad = txtEspecialidad.getText();
        int cedula = Integer.parseInt(txtCedula.getText());
        int idUsuario = Integer.parseInt(IdUsuario.getText());

        Connection conn = null;
        PreparedStatement pstmt = null;
        

        try {
            // Obtener la conexión desde la clase DatabaseConnection
            //conn = Conexion.getConnection();
            conn = Conexion.conectar();
           
            // Crear la sentencia SQL para insertar los datos
            String sql = "INSERT INTO tb_profesor (nombre, apellidoP, apellidoM, direccion, telefono, especialidad, cedula, IdUsuario) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
            pstmt = conn.prepareStatement(sql);
            
            pstmt.setString(1, nombre);
            pstmt.setString(2, apellidoP);
            pstmt.setString(3, apellidoM);
            pstmt.setString(4, direccion);
            pstmt.setString(5, telefono);
            pstmt.setString(6, especialidad);
            pstmt.setInt(7, cedula);
            pstmt.setInt(8, idUsuario);

            // Ejecutar la sentencia SQL
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Profesor guardado exitosamente");
            
            Limpiar();
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al guardar el profesor: " + e.getMessage());
        } finally {
            // Cerrar recursos
            try {
                if (pstmt != null) pstmt.close();
                if (conn != null) conn.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
}




 
private void cargarDatosProfesor(Profesor profesor) {
    txtNombre.setText(profesor.getNombre());
    txtApellidoP.setText(profesor.getApellidoP());
    txtApellidoM.setText(profesor.getApellidoM());
    txtDomicilio.setText(profesor.getDireccion());
    txtNumeroTelefono.setText(profesor.getTelefono());
    txtEspecialidad.setText(profesor.getEspecialidad());
    txtCedula.setText(String.valueOf(profesor.getCedula()));  // Conversión correcta de int a String
    IdUsuario.setText(String.valueOf(profesor.getIdUsuario())); // Conversión correcta de int a String
}



public void eliminarProfesor() {
    int selectedRow = tablaProfesor.getSelectedRow();
    if (selectedRow >= 0) {
        // Obtener la cédula como int
        int cedulaSeleccionada = (int) tablaProfesor.getValueAt(selectedRow, 6);

        int confirm = JOptionPane.showConfirmDialog(this, "¿Estás seguro de que deseas eliminar este profesor?", "Confirmar eliminación", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            // Llamar al método de eliminarProfesor con la cédula como int
            boolean eliminado = ControladorProfesor.eliminarProfesor(cedulaSeleccionada);
            if (eliminado) {
                cargarDatos();
                JOptionPane.showMessageDialog(this, "Profesor eliminado correctamente.");
            } else {
                JOptionPane.showMessageDialog(this, "Error al eliminar el profesor.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    } else {
        JOptionPane.showMessageDialog(this, "Selecciona un profesor para eliminar.", "Error", JOptionPane.ERROR_MESSAGE);
    }
}




public void cargarDatos() {
    
    List<Profesor> listaProfesor = ControladorProfesor.obtenerProfesor();
    DefaultTableModel modeloTabla = new DefaultTableModel(
    new String[]{"Nombre", "Apellido paterno", "Apellido materno", "Domicilio", "Teléfono", "Especialidad", "Cédula", "IdUsuario"}, 0);

    modeloTabla.setRowCount(0);
       
        for (Profesor profesor : listaProfesor) {
            modeloTabla.addRow (new  Object[]{
                profesor.getNombre(),
                profesor.getApellidoP(),
                profesor.getApellidoM(),
                profesor.getDireccion(),
                profesor.getTelefono(),
                profesor.getEspecialidad(),
                profesor.getCedula(),    
                profesor.getIdUsuario(),   
                    
            });
        }
         tablaProfesor.setModel(modeloTabla);
    }




 public void cargarDatosss() {
        List<Profesor> listaProfesor = ControladorProfesor.obtenerProfesor();
        DefaultTableModel model = (DefaultTableModel) tablaProfesor.getModel();
        model.setRowCount(0);

        for (Profesor profesor : listaProfesor) {
            Object[] row = new Object[8];

             row[0] = profesor.getNombre();   
             row[1] = profesor.getApellidoP();
             row[2] = profesor.getApellidoM();
             row[3] = profesor.getDireccion();
             row[4] = profesor.getTelefono();
             row[5] = profesor.getEspecialidad();
             row[6] = profesor.getCedula();
             row[7] = profesor.getIdUsuario();

            model.addRow(row);
        }
    }



private void modificarProfesorES() {
        String nombre = txtNombre.getText().trim();
        String apellidoP = txtApellidoP.getText().trim();
        String apellidoM = txtApellidoM.getText().trim();
        String direccion = txtDomicilio.getText().trim();
        String telefono = txtNumeroTelefono.getText().trim();
        String especialidad = txtEspecialidad.getText().trim();
         
        
        String cedulaText = txtCedula.getText().trim();
        int cedula = Integer.parseInt(cedulaText); 
        
         String IdUsuarioText = IdUsuario.getText().trim();
        int IdUsuario = Integer.parseInt(IdUsuarioText); 
        
        
        
        // Validar campos obligatorios
        if (nombre.isEmpty() || apellidoP.isEmpty() || apellidoM.isEmpty() || direccion.isEmpty() ||
            telefono.isEmpty() || especialidad.isEmpty() || cedulaText.isEmpty() || IdUsuarioText.isEmpty()  ) {
            JOptionPane.showMessageDialog(this, "Todos los campos son obligatorios.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Mostrar cuadro de diálogo de confirmación
        int confirm = JOptionPane.showConfirmDialog(this, "¿Está seguro de que desea realizar estos cambios?", "Confirmar Cambios", JOptionPane.YES_NO_OPTION);
        if (confirm != JOptionPane.YES_OPTION) {
            return; // Salir si el usuario no confirma
        }

        int selectedRow = tablaProfesor.getSelectedRow();
        if (selectedRow >= 0) {
            // Obtener el ID del profesor seleccionado
            int idUsuario = (int) tablaProfesor.getValueAt(selectedRow, 0);

            // Obtener el objeto Profesor a partir del ID
            Profesor profesor = new Profesor();
            
           
            profesor.setNombre(nombre);
            profesor.setApellidoP(apellidoP);
            profesor.setApellidoM(apellidoM);
            profesor.setDireccion(direccion);
            profesor.setTelefono(telefono);
            profesor.setEspecialidad(especialidad);
            profesor.setCedula(cedula);
            profesor.setIdUsuario(idUsuario);

            // Actualizar el profesor en el controlador
            boolean actualizado = ControladorProfesor.actualizarProfesor(profesor);
            if (actualizado) {
                cargarDatos();
                Limpiar();
                JOptionPane.showMessageDialog(this, "Datos actualizados correctamente.");
            } else {
                JOptionPane.showMessageDialog(this, "Error al actualizar los datos del profesor.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un profesor de la tabla.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }




 
 
 private void cargarDatosEnCampos(int row) {
    txtNombre.setText((String) tablaProfesor.getValueAt(row, 0));
    txtApellidoP.setText((String) tablaProfesor.getValueAt(row, 1));
    txtApellidoM.setText((String) tablaProfesor.getValueAt(row, 2));
    txtDomicilio.setText((String) tablaProfesor.getValueAt(row, 3));
    txtNumeroTelefono.setText((String) tablaProfesor.getValueAt(row, 4));
    txtEspecialidad.setText((String) tablaProfesor.getValueAt(row, 5));
    txtCedula.setText(String.valueOf(tablaProfesor.getValueAt(row, 6)));
    IdUsuario.setText(String.valueOf(tablaProfesor.getValueAt(row, 7))); // Suponiendo que IdUsuario también es un JTextField
}

 
 
 

 
 
 
   
 private void modificarProfesor() throws SQLException {
    String nombre = txtNombre.getText().trim();
    String apellidoP = txtApellidoP.getText().trim();
    String apellidoM = txtApellidoM.getText().trim();
    String direccion = txtDomicilio.getText().trim();
    String telefono = txtNumeroTelefono.getText().trim();
    String especialidad = txtEspecialidad.getText().trim();
    String cedulaText = txtCedula.getText().trim();
    int cedula = cedulaText.isEmpty() ? 0 : Integer.parseInt(cedulaText);

    String IdUsuarioText = IdUsuario.getText().trim();
    int IdUsuario = IdUsuarioText.isEmpty() ? 0 : Integer.parseInt(IdUsuarioText);

    // Validar campos obligatorios
    if (nombre.isEmpty() || apellidoP.isEmpty() || apellidoM.isEmpty() || direccion.isEmpty() ||
        telefono.isEmpty() || especialidad.isEmpty() || cedulaText.isEmpty() || IdUsuarioText.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Todos los campos son obligatorios.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Mostrar cuadro de diálogo de confirmación
    int confirm = JOptionPane.showConfirmDialog(this, "¿Está seguro de que desea realizar estos cambios?", "Confirmar Cambios", JOptionPane.YES_NO_OPTION);
    if (confirm != JOptionPane.YES_OPTION) {
        return; // Salir si el usuario no confirma
    }

    // Obtener la cédula desde la tabla
    int selectedRow = tablaProfesor.getSelectedRow();
    if (selectedRow >= 0) {
        // Obtener la cédula de la tabla
        int cedulaSeleccionada = (int) tablaProfesor.getValueAt(selectedRow, 6);

        // Obtener el objeto Profesor a partir de la cédula
        Profesor profesor = ControladorProfesor.getProfesorPorCedula(cedulaSeleccionada);
        if (profesor != null) {
            // Actualizar los campos del objeto Profesor
            profesor.setNombre(nombre);
            profesor.setApellidoP(apellidoP);
            profesor.setApellidoM(apellidoM);
            profesor.setDireccion(direccion);
            profesor.setTelefono(telefono);
            profesor.setEspecialidad(especialidad);
            profesor.setCedula(cedula); // Asegúrate de que la cédula sea la correcta
            profesor.setIdUsuario(IdUsuario);

            // Actualizar el profesor en el controlador
            boolean actualizado = ControladorProfesor.actualizarProfesor(profesor);
            if (actualizado) {
                cargarDatos();
                Limpiar();
                JOptionPane.showMessageDialog(this, "Datos actualizados correctamente.");
            } else {
                JOptionPane.showMessageDialog(this, "Error al actualizar los datos del profesor.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "No se encontró un profesor con la cédula proporcionada.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(this, "Seleccione un profesor de la tabla.", "Error", JOptionPane.ERROR_MESSAGE);
    }
}

 
 







}

